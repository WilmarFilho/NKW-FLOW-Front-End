version: '3.8'

services:
  # FRONTEND
  frontend:
    build: ./NKW-FLOW-Front-End
    container_name: nkw-flow-frontend
    ports:
      - "8080:80"
    depends_on:
      - backend
    environment:
      - VITE_API_NODE_URL=http://backend:3000
    networks:
      - nkw-network

  # BACKEND (Node.js)
  backend:
    build:
      context: ./NKW-FLOW-Node
    container_name: nkw-flow-backend
    ports:
      - "3000:3000"
    volumes:
      - ./NKW-FLOW-Node:/app
      - /app/node_modules
    environment:
      - NODE_ENV=production
      - PORT=3000
    networks:
      - nkw-network

  # EVOLUTION API
  evolution-api:
    container_name: lab_evolution_api
    image: atendai/evolution-api:v2.2.3
    restart: always
    ports:
      - "8081:8080"
    volumes:
      - lab_evolution_instances:/lab_evolution/instances
    env_file:
      - .env
    networks:
      - nkw-network

  # POSTGRES
  postgres:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - nkw-network

  # REDIS
  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6380:6379"
    networks:
      - nkw-network

  # N8N
  n8n:
    image: n8nio/n8n
    container_name: n8n
    restart: always
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
      - ./workflows:/home/node/.n8n/workflows
    environment:
      - TZ=America/Sao_Paulo
    networks:
      - nkw-network

volumes:
  lab_evolution_instances:
  pg_data:
  n8n_data:

networks:
  nkw-network:
    driver: bridge
